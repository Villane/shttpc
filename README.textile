h2. Simple HTTP Client

Wraps Apache HttpClient 4.0 to provide an easy to use Scala API. Java users have some benefits as well.

Copyright (c) 2009, Erkki Lindpere
All rights reserved.

This software is distributed under the MIT license. See the file License.txt for the full text.

The project name *shttpc* is pronounced like ShittyPC.

A "Maven repository":http://villane.org/mavenrepo/org/villane/shttpc/ at villane.org contains both sources and binaries. 

h3. Usage examples (Scala)

h4. GET with params Map, comprehensions with NekoHTML parsed to Scala's XML Nodes

<pre><code>
import org.villane.shttpc._
import org.villane.shttpc.Preamble._

object MetacriticTest {
  val http = new Http

  case class Result(name: String, url: String, score: Int)
  
  def feelingLucky(query: String) = {
    val html = http.get("http://www.metacritic.com/search/process" ? Map(
      "sort" -> "relevance",
      "termtype" -> "all",
      "ts" -> query,
      "ty" -> "0"
    )).getHtml

    val res = for {
      div <- html \ "BODY" \ "DIV"
      if (div \ "@id" == "pagecontainer")
      col <- div \ "DIV" \ "TABLE" \ "TBODY" \ "TR" \ "TD"
      if (col \ "@id" == "rightcolumn")
      p <- col \ "P"
      if (p.text.startsWith("1."))
    } yield p

    Result(res \ "A" text, res \ "A" \ "@href" text, (res \ "SPAN" text).toInt)
  }

  def main(sgra: Array[String]) = {
    println(feelingLucky("Brutal Legend").score)
  }
}
</code></pre>

h4. Alternate comprehension with SHTTPC's XPath support

Note that XPath support is very limited, basically only expressions like the one below are supported.
<pre><code>
    val res = for {
      p <- html / "BODY/DIV[@id='pagecontainer']/DIV/TABLE/TBODY/TR/TD[@id='rightcolumn']/P"
      if (p.text.startsWith("1."))
    } yield p
</code></pre>
